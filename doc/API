Plugin API
==========

Any Plugin
----------

    Any plugin *must* implement the following mandatory functions :

    1 - onsen_get_plugin_info
    2 - onsen_is_file_supported

+ onsen_get_plugin_info :

    Retrieve information about the plugin in a given buffer.

    Prototype : int (*)(int iInfoID, char *szBuffer, int iBufferLen)

    -----------------------------------------------------------------
    | Arguments     | Description                                   |
    -----------------------------------------------------------------
    | iInfoID       | Information ID    Meaning                     |
    |               |   0               Plugin metadata             |
    |               |   1               Plugin name                 |
    |               |   2               Plugin version              |
    |               |   3               Plugin authors              |
    |               |   3+X             File extension no. X        |
    |               |   3+X+1           File description no. X      |
    |               |                                               |
    | szBuffer      | Buffer to fill the info with                  |
    |               |                                               |
    | iBufferLen    | Buffer length (bytes)                         |
    -----------------------------------------------------------------

    Return value :
        - Number of characters written to the buffer.
        - 0 if information ID is incorrect.

    Comments :
        - The plugin metadata is a 3 bytes array that must be read to ensure
          that the plugin uses the correct *libonsen* API and that the plugin
          type is supported.

          Here is an exemple : 01 A
                                | +--- A : Archive plugin
                                +------*libonsen* API version no. (MAJOR, MINOR)

+ onsen_is_file_supported :

    Check if the given file is supported by the plugin.

    Prototype : int (*)(int iFileType, void *pFile, long lOffset)

    -----------------------------------------------------------------
    | Arguments     | Description                                   |
    -----------------------------------------------------------------
    | iFileType     | File type         Meaning                     |
    |               |   0               Disk file                   |
    |               |   1               Memory file                 |
    |               |                                               |
    | pFile         | File type         Meaning                     |
    |               |   0               Filename                    |
    |               |   1               Pointer to memory file      |
    |               |                                               |
    | lOffset       | File type         Meaning                     |
    |               |   0               Offset to start reading from|
    |               |   1               Data size                   |
    -----------------------------------------------------------------

    Return value :
        - 1 if file is supported by the plugin.
        - 0 if file is not supported by the plugin.

    Comments :
        - Each plugin examines the header of the given file in order to
          quickly determine if the file format is supported by the plugin.

Archive Plugin
--------------

    Any ARCHIVE plugin *must* implement the following functions :

    1 - onsen_get_archive_info
    2 - onsen_get_file_info

+ onsen_get_archive_info :

    Retrieve information about given archive.

    Prototype : int onsen_get_archive_info(int iFileType, void *pFile,
                                           long lOffset,
                                           OnsenArchiveInfo_t *pArchiveInfo)

    -----------------------------------------------------------------
    | Arguments     | Description                                   |
    -----------------------------------------------------------------
    | iFileType     | File type         Meaning                     |
    |               |   0               Disk file                   |
    |               |   1               Memory file                 |
    |               |                                               |
    | pFile         | File type         Meaning                     |
    |               |   0               Filename                    |
    |               |   1               Pointer to memory file      |
    |               |                                               |
    | lOffset       | File type         Meaning                     |
    |               |   0               Offset to start reading from|
    |               |   1               Data size                   |
    |               |                                               |
    | pArchiveInfo  | Allocated structure to fill with archive      |
    |               | information                                   |
    -----------------------------------------------------------------

    Return value :
        - 1 if information retrieval succeeded.
        - 0 if information retrieval failed.

+ onsen_get_file_info :

    Retrieve information about an archive file.

    Prototype : int onsen_get_file_info(int iFileType, void *pFile,
                                        long lOffset, char *szFilename,
                                        OnsenArchiveEntry_t *pEntry)

    -----------------------------------------------------------------
    | Arguments     | Description                                   |
    -----------------------------------------------------------------
    | iFileType     | File type         Meaning                     |
    |               |   0               Disk file                   |
    |               |   1               Memory file                 |
    |               |                                               |
    | pFile         | File type         Meaning                     |
    |               |   0               Filename                    |
    |               |   1               Pointer to memory file      |
    |               |                                               |
    | lOffset       | File type         Meaning                     |
    |               |   0               Offset to start reading from|
    |               |   1               Data size                   |
    |               |                                               |
    | szFilename    | Searched filename in archive                  |
    |               |                                               |
    | pEntry        | Allocated structure to fill with archive      |
    |               | file information                              |
    -----------------------------------------------------------------

    Return value :
        - 1 if information retrieval succeeded.
        - 0 if information retrieval failed.

    Any ARCHIVE plugin *may* implement the following function :

    1 - onsen_write_archive_file

    Prototype : int onsen_write_file(int iSrcType, void *szSrcFile,
                                     long lSrcOffset, int iDstType,
                                     void *szDstFile, long lDstFileSize,
                                     OnsenWriteFileCallback pCallback,
                                     void *pData)

    -----------------------------------------------------------------
    | Arguments     | Description                                   |
    -----------------------------------------------------------------
    | iSrcType      | Source file type  Meaning                     |
    |               |   0               Disk file                   |
    |               |   1               Memory file                 |
    |               |                                               |
    | szSrcFile     | Source file type  Meaning                     |
    |               |   0               Filename                    |
    |               |   1               Pointer to memory file      |
    |               |                                               |
    | lSrcOffset    | File type         Meaning                     |
    |               |   0               Offset to start reading from|
    |               |   1               Data size                   |
    |               |                                               |
    | iDstType      | Dest. file type   Meaning                     |
    |               |   0               Disk file                   |
    |               |   1               Memory file                 |
    |               |                                               |
    | szDstFile     | Dest. file type   Meaning                     |
    |               |   0               Filename                    |
    |               |   1               Pointer to memory file      |
    |               |                                               |
    | lDstFileSize  | Archive file uncompressed size                |
    |               |                                               |
    | pCallback     | Callback to call when data is read or written |
    |               |                                               |
    | pData         | Data, usually a OnsenArchiveEntry_t structure |
    -----------------------------------------------------------------

    Return value :
        - 1 if write succeeded.
        - 0 if write failed.
